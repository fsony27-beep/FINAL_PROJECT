# –°–æ—Ñ—å—è –ó–æ—Ç–∏–Ω–∞, 36-—è –∫–æ–≥–æ—Ä—Ç–∞ - –î–∏–ø–ª–æ–º–Ω—ã–π –ø—Ä–æ–µ–∫—Ç. –ò–Ω–∂–µ–Ω–µ—Ä –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –ø–ª—é—Å
import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "https://qa-scooter.praktikum-services.ru/api/v1"

def test_create_and_get_order():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞...")
    
    # –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    order_data = {
        "firstName": "–°–æ—Ñ—å—è",
        "lastName": "–ó–æ—Ç–∏–Ω–∞",
        "address": "–ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, 1",
        "metroStation": 5,
        "phone": "+79991234567",
        "rentTime": 3,
        "deliveryDate": "2025-11-01",
        "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑",
        "color": ["BLACK"]
    }
    
    try:
        # –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        print("üì¶ –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑...")
        create_response = requests.post(f"{BASE_URL}/orders", json=order_data)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ
        assert create_response.status_code == 201, f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: {create_response.status_code}"
        print("‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –®–∞–≥ 2: –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç—Ä–µ–∫–∞
        response_data = create_response.json()
        track_number = response_data["track"]
        assert track_number is not None, "–¢—Ä–µ–∫ –Ω–æ–º–µ—Ä –Ω–µ –ø–æ–ª—É—á–µ–Ω"
        print(f"üìÆ –¢—Ä–µ–∫ –Ω–æ–º–µ—Ä: {track_number}")
        
        # –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ —Ç—Ä–µ–∫—É
        print("üîç –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –ø–æ —Ç—Ä–µ–∫—É...")
        get_response = requests.get(f"{BASE_URL}/orders/track", params={"t": track_number})
        
        # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞
        assert get_response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞: {get_response.status_code}"
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        order_info = get_response.json()
        assert "order" in order_info, "–ö–ª—é—á 'order' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ"
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: {e}")
        raise

if __name__ == "__main__":
    test_create_and_get_order()
